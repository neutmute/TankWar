@using TankWar.Models
@model ViewPortModel
@{
    ViewBag.Title = "Tank War View Port";
}

<style>.sjs{border:2px #999 solid;}</style>


<h2>Tank War View Port</h2>

<div class="row">
    <div class="span10" id="sceneDiv"></div>
    <div class="span2"></div>
</div>
@section Scripts {
    <script src="~/Scripts/sprite.js"></script>
    
    <script>
        function sceneControllerClass() {

            var self = this;
            var scene = null;
            var tankSprites = [];
            var cycleTicker = null;
            var cycleList = sjs.List();
            
            
            this.cycleAnimations = function() {
                var cycle;
                console.log('cylcingticker');
                while(cycle = cycleList.iterate()) {
                    cycle.next();
                    if (cycle.done) {
                        cycle.reset();
                        cycleList.remove(cycle);
                    }
                    cycle.update();
                }
            }
            
            this.startGame = function(viewState) {

                console.log('startGame');

                if (scene != null) {
                    scene.reset();
                }

                scene = sjs.Scene({ w: @Model.ViewSize.BottomRight.X, h: @Model.ViewSize.BottomRight.Y, parent: document.getElementById('sceneDiv'), autoPause:false });

                scene.loadImages(['Content/Sprites/Tank1.gif'], function() {

                    var layer = scene.Layer("layer", { useCanvas: false });

                    // load player tanks
                    for (var i = 0; i < viewState.Tanks.length; i++) {

                        var viewStateTank = viewState.Tanks[i];
                        var tankSprite = scene.Sprite('Content/Sprites/Tank1.gif', layer);
                        tankSprite.size(43, 40);
                        tankSprite.setXOffset(5);
                        tankSprite.setYOffset(6);

                        tankSprite.move(viewStateTank.Point.X, viewStateTank.Point.Y);
                        tankSprite.serverId = viewStateTank.Id;

                        tankSprites.push(tankSprite);
                        tankSprite.update();
                    }
                    
                    var tankFiringCycle = sjs.Cycle([   [5, 6, 5],
                                                        [55, 6, 5],
                                                        [100, 6, 5],
                                                        [145, 6, 5],
                                                        [190, 6, 5]]);

                    tankFiringCycle.repeat = false;
                    tankFiringCycle.addSprite(tankSprites[1]);
                    cycleList.add(tankFiringCycle);
                    
                    
                    cycleTicker = scene.Ticker(30, self.cycleAnimations);
                    cycleTicker.run();

                });
            }
            

            this.tick = function(viewState) {
                console.log('tick');
                for(var spriteIndex = 0; spriteIndex < tankSprites.length; spriteIndex++) {
                    var sprite = tankSprites[spriteIndex];
                    var viewStateTank = null;
                    for (var i = 0; i < viewState.Tanks.length; i++) {
                        var viewStateTankCandidate = viewState.Tanks[i]; 
                        if (sprite.serverId == viewStateTankCandidate.Id) {
                            viewStateTank = viewStateTankCandidate;
                        }
                    }
                    if (viewStateTank == null) {
                        sprite.remove();
                        console.log('removing sprite');
                    } else {
                        sprite.setX(viewStateTank.Point.X);
                        sprite.setY(viewStateTank.Point.Y);
                        sprite.update();
                    }
                }
            };
        }


        $(function() {


            var sceneController = new sceneControllerClass();

            $.connection.viewPortHub.client.startGame = sceneController.startGame;

           // $.connection.viewPortHub.client.tick = sceneController.tick;

            $.connection.hub.start().done(function() {
                console.log("started hub!");
                $.connection.viewPortHub.server.ping();
            });


        });

        window.onload = function() {

            //var scene = sjs.Scene({ w: @Model.ViewSize.BottomRight.X, h: @Model.ViewSize.BottomRight.Y, parent: document.getElementById('sceneDiv') });
            /*
            scene.loadImages(['Content/Sprites/Tank1.gif'], function() {

                var canvas = window.location.href.indexOf('canvas') != -1;
                var webgl = window.location.href.indexOf('webgl') != -1;

                var sprites = [];
                if (canvas) {
                    document.getElementById('canvas-mode').style.display = 'none';
                    var layer = scene.Layer("layer", { useCanvas: true });
                } else if (webgl) {
                    document.getElementById('webgl-mode').style.display = 'none';
                    var layer = scene.Layer("layer", { useWebGL: true });
                } else {
                    document.getElementById('html-mode').style.display = 'none';
                    var layer = scene.Layer("layer", { useCanvas: false });
                }

                for (var i = 0; i < 1; i++) {
                    var sp = scene.Sprite('Content/Sprites/Tank1.gif', layer);
                    sp.size(40, 33);
                    sp.setYOffset(2);
                    // sp.move(6 * i + 10, 70 + ((i%4) * 60));
                    sprites.push(sp);
                }

                var cycle = sjs.Cycle([[18, 60, 5],
                    [60, 60, 5],
                    [100, 60, 5],
                    [140, 60, 5],
                    [180, 60, 5],
                    [220, 60, 5],
                    [260, 60, 5]]);
                cycle.addSprites(sprites);

                tankSprite = scene.Sprite('Content/Sprites/Tank1.gif', layer);
                tankSprite.size(40, 40);
                tankSprite.setYOffset(2);
                tankSprite.move(40, 50);

                shellSprite = scene.Sprite('Content/Sprites/Tank1.gif', layer);
                shellSprite.size(8, 8);
                shellSprite.setYOffset(0);
                shellSprite.move(90, 150);

                var shootCycle = sjs.Cycle([[5, 6, 5],
                    [55, 6, 5],
                    [100, 6, 5],
                    [145, 6, 5],
                    [190, 6, 5]]);
                shootCycle.addSprites(tankSprite);

                var shellCycle = sjs.Cycle([[238, 26, 5],
                    [250, 26, 5]]);

                shellCycle.addSprites(shellSprite);

                var sin_cycle = 0,
                    ms_to_render = 0,
                    average_ms = 0,
                    load = document.getElementById('load'),
                    fps = document.getElementById('fps');


                // apply the latest visual changes to the sprite
                // (draw if canvas, update attribute if DOM);
                tankSprite.update();

                tankSprite.name = 'ben';


            });
            */
        };
    </script>
}