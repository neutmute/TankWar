@{
    ViewBag.Title = "Tank War Gamepad";
}

<form class="form-search">
  <input type="text" class="input-medium"  placeholder="Type something…">
  <button type="submit" class="btn">Go</button>
</form>

<div class="row">
    <div class="span2">
        <div class="row">
            <div class="span2">
                <div id="sliderAngle" data-bind="slider:angle"></div>        
            </div>
        </div>
        <div class="row">
            <div class="span2"><br />
                Power:<span data-bind="text:power"></span><br />
                Angle:<span data-bind="text: angle"></span>
            </div>
        </div>
        
    </div>
    <div class="span2">
        
        <div id="sliderPower" data-bind="slider:power"></div>
    </div>
</div>
<div class="row">
    <div class="span4">
        <button class="btn btn-danger btn-large" data-bind="click:shoot"><i class="icon-white icon-arrow-up"></i> Fire!</button>
    </div>
</div>

@section Scripts {
    <script>
        ko.bindingHandlers.slider = {
            
            init: function(element, valueAccessor, allBindingsAccessor) {
                var options = allBindingsAccessor().sliderOptions || {};
                $(element).slider(options);
                ko.utils.registerEventHandler(element, "slidechange", function(event, ui) {
                    var observable = valueAccessor();
                    observable(ui.value);
                });
                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                    $(element).slider("destroy");
                });
                ko.utils.registerEventHandler(element, "slide", function(event, ui) {
                    var observable = valueAccessor();
                    observable(ui.value);
                });
            },
            
            update: function(element, valueAccessor) {
                var value = ko.utils.unwrapObservable(valueAccessor());
                if (isNaN(value)) value = 0;
                $(element).slider("value", value);

            }
        };

        function gamepadViewModel() {
            var self = this;
            this.hub = $.connection.gamepadHub;
            this.power = ko.observable(0);
            this.angle = ko.observable(90);
            this.gameStatus = ko.observable();

            this.init = function () {
                this.hub.server.getGameStatus()
                    .done(function (result) {
                        console.log('gamestate=' + result);
                        self.gameStatus(result);
                    }).fail(function (error) {
                        console.warn(error);
                    });;
            }
            
            this.shoot = function() {
                this.hub.server.shoot(this.power(), this.angle())
                    .done(function () {
                        console.log('Kapow!');
                    }).fail(function (error) {
                        console.warn(error);
                    });
            }
            
        }

        $(function() {
            $("#sliderPower").slider({
                orientation: "vertical",
                range: "min",
                min: 0,
                max: 100,
                value: 60
            });

            $("#sliderAngle").slider({
                range: "min",
                min: 0,
                max: 180,
                value: 90
            });
        }
        );
        
        var viewModel = new gamepadViewModel();
        ko.applyBindings(viewModel);

        $.connection.hub.start().done(function () {
            viewModel.init();
        });
    </script>
}